package views

import (
"github.com/oliverisaac/pushable/types"
"fmt"
)

func valueContent(note types.Note) string {
if note.ID == 0 {
return note.Content
}
return ""
}

templ CreateNoteForm(note types.Note, currentPromptName string, prompt string, err error) {
<div id="newnote" class="mb-4">
	<div class="text-2xl text-neutral-100 italic my-2">
		<button hx-get={ fmt.Sprintf("/note/create?promptName=%s", currentPromptName) } hx-target="#newnote"
			hx-swap="outerHTML" class="p-1 text-blue-300 rounded-md hover:bg-neutral-700">
			@refreshIconSVG()
		</button>
		{ prompt }
	</div>
	<form hx-post="/note/create" hx-target="#newnote" class="flex items-start space-x-2">
		<input type="hidden" name="prompt" value={prompt} />
		<textarea name="content"
			class="w-full px-4 py-2 text-white rounded-md bg-neutral-800 focus:outline-none focus:ring-2 focus:ring-primary-600"
			rows="1"
			oninput="this.style.height = 'auto'; this.style.height = (this.scrollHeight) + 'px';">{valueContent(note)}</textarea>
		<input type="submit" class="px-4 py-2 text-white rounded-md bg-primary-600 hover:bg-primary-700" />
	</form>
	if err != nil {
	<p class="mt-2 text-sm text-red-500">
		{err.Error()}
	</p>
	}
</div>
if note.ID > 0 {
<div hx-swap-oob="afterbegin:#notes">
	@Note(note)
</div>
}
}

templ Note(note types.Note) {
<div id={ fmt.Sprintf("note-%d", note.ID) } class="p-4 mb-4 rounded-md bg-neutral-800 break-words">
	<div class="text-base text-neutral-400 italic">
		{ note.Prompt }
	</div>
	<div class="text-lg text-white">
		{ note.Content }
	</div>
	<div class="mt-2 text-sm text-neutral-400"></div>
	<div class="flex items-center justify-between mt-1">
		<div class="flex items-center space-x-2 text-sm">
			if note.User.Name == "oisaac" {
			<div class="font-bold text-primary-400">
				{ note.User.Name }
			</div>
			} else if note.User.Name == "ldisaac" {
			<div class="font-bold text-purple-600">
				{ note.User.Name }
			</div>
			} else {
			<div class="font-bold text-blue-500">
				{ note.User.Name }
			</div>
			}
			<div class="relative group">
				<div class="text-neutral-500 cursor-pointer" tabindex="0">
					{ note.CreatedAt.Local().Format("Jan 2, 2006") }
				</div>
				<div
					class="absolute bottom-full left-1/2 -translate-x-1/2 px-2 py-1 text-sm text-white rounded-md bg-neutral-900 opacity-0 group-hover:opacity-100 group-focus:opacity-100 transition-opacity duration-300 pointer-events-none w-max">
					{ note.CreatedAt.Local().Format("Mon Jan 2, 2006 @ 15:04:05 MST" ) }
				</div>
			</div>
		</div>
		if note.IsUserNote {
		<button hx-delete={ fmt.Sprintf("/note/%d", note.ID) } hx-target={ fmt.Sprintf("#note-%d", note.ID) }
			hx-swap="outerHTML" hx-confirm="Are you sure you want to delete this note?"
			class="p-1 text-red-600 rounded-md hover:bg-neutral-700">
			<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
				stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
				<polyline points="3 6 5 6 21 6"></polyline>
				<path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
				<line x1="10" y1="11" x2="10" y2="17"></line>
				<line x1="14" y1="11" x2="14" y2="17"></line>
			</svg>
		</button>
		}
	</div>
</div>
}

templ SignUpForm(err error) {
<div id="sign-up-form" class="flex flex-col items-center justify-center h-screen">
	<form hx-post="/auth/sign-up" hx-target="body" class="w-full max-w-md p-8 space-y-6 rounded-lg bg-neutral-800">
		<a href="/" title="Napp Home"
			class="flex items-center justify-center mb-6 space-x-2 text-2xl font-bold text-white">
			Pushable
		</a>

		<div>
			<label for="name" class="block mb-2 text-sm font-bold text-neutral-400">
				Name
			</label>
			<input id="name" type="text" name="name" autocomplete="name" value="" required
				class="w-full px-4 py-2 text-white rounded-md bg-neutral-900 focus:outline-none focus:ring-2 focus:ring-primary-600" />
		</div>

		<div>
			<label for="email" class="block mb-2 text-sm font-bold text-neutral-400">
				Email
			</label>
			<input id="email" type="text" name="email" autocomplete="email" value="" required
				class="w-full px-4 py-2 text-white rounded-md bg-neutral-900 focus:outline-none focus:ring-2 focus:ring-primary-600" />
		</div>

		<div>
			<label for="password" class="block mb-2 text-sm font-bold text-neutral-400">
				Password
			</label>
			<input id="password" type="password" name="password" value="" required
				class="w-full px-4 py-2 text-white rounded-md bg-neutral-900 focus:outline-none focus:ring-2 focus:ring-primary-600" />
		</div>

		<button type="submit"
			class="w-full px-4 py-2 text-white rounded-md bg-primary-600 hover:bg-primary-700">Register</button>

		if err != nil {
		<p class="mt-2 text-sm text-red-500">
			{err.Error()}
		</p>
		}

		<p class="text-sm text-center text-neutral-400">Already have an account? <button type="button"
				hx-get="/auth/sign-in" hx-target="body" class="font-bold text-primary-400 hover:underline">Sign
				In</button></p>
	</form>
</div>
}

templ SignInForm(config types.Config, err error) {
<div id="sign-in-form" class="flex flex-col items-center justify-center h-screen">
	<form hx-post="/auth/sign-in" hx-target="body" class="w-full max-w-md p-8 space-y-6 rounded-lg bg-neutral-800">
		<a href="/" title="Napp Home"
			class="flex items-center justify-center mb-6 space-x-2 text-2xl font-bold text-white">
			Pushable
		</a>

		<div>
			<label for="email" class="block mb-2 text-sm font-bold text-neutral-400">
				Email
			</label>
			<input id="email" type="text" name="email" autocomplete="email" value="" required
				class="w-full px-4 py-2 text-white rounded-md bg-neutral-900 focus:outline-none focus:ring-2 focus:ring-primary-600" />
		</div>

		<div>
			<label for="password" class="block mb-2 text-sm font-bold text-neutral-400">
				Password
			</label>
			<input id="password" type="password" name="password" value="" required
				class="w-full px-4 py-2 text-white rounded-md bg-neutral-900 focus:outline-none focus:ring-2 focus:ring-primary-600" />
		</div>

		<button type="submit" class="w-full px-4 py-2 text-white rounded-md bg-primary-600 hover:bg-primary-700">Sign
			In</button>

		if err != nil {
		<p class="mt-2 text-sm text-red-500">
			{err.Error()}
		</p>
		}

		if len(config.AllowSignupEmails) > 0 || config.AllowSignup {
		<p class="text-sm text-center text-neutral-400">Do you need an account? <button type="button"
				hx-get="/auth/sign-up" hx-target="body" class="font-bold text-primary-400 hover:underline">Register
				Now</button>
		</p>
		}
	</form>
</div>
}

templ notificationBellSVG(class string) {
<svg fill="currentColor" class={class} version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve">
	<g>
		<g>
			<g>
				<path d="M65.192,272.872c-3.979-4.342-10.727-4.641-15.071-0.659c-1.233,1.13-2.509,2.27-3.825,3.427
				c-4.425,3.888-4.862,10.627-0.975,15.053c2.111,2.401,5.056,3.628,8.019,3.628c2.5,0,5.01-0.874,7.036-2.653
				c1.431-1.257,2.817-2.498,4.156-3.726C68.876,283.963,69.172,277.215,65.192,272.872z" />
				<path d="M72.339,265.417c1.856,1.292,3.979,1.913,6.083,1.913c3.373,0,6.692-1.597,8.765-4.575
				c17.563-25.238,20.206-50.18,23.705-95.725c0.452-5.874-3.943-11.002-9.819-11.453c-5.891-0.451-11.001,3.946-11.452,9.819
				c-3.296,42.902-5.519,64.445-19.943,85.174C66.309,255.404,67.503,262.053,72.339,265.417z" />
				<path d="M398.336,147.832c1.069,5.012,5.495,8.446,10.422,8.446c0.735,0,1.484-0.077,2.234-0.237
				c5.76-1.228,9.438-6.894,8.208-12.655c-0.439-2.064-0.925-4.142-1.442-6.177c-1.452-5.709-7.259-9.162-12.966-7.71
				c-5.709,1.452-9.161,7.257-7.709,12.966C397.532,144.233,397.954,146.039,398.336,147.832z" />
				<path d="M465.484,275.453c-31.224-25.969-38.083-51.269-42.433-101.768c-0.507-5.87-5.679-10.221-11.543-9.711
				c-5.869,0.506-10.217,5.674-9.711,11.542c4.698,54.531,13.383,85.849,50.046,116.339c1.994,1.658,4.411,2.466,6.815,2.466
				c3.06,0,6.098-1.31,8.208-3.846C470.632,285.945,470.013,279.22,465.484,275.453z" />
				<path d="M441.904,314.239c-0.142-0.284-0.295-0.559-0.463-0.828c-2.579-4.601-5.867-8.114-9.823-10.396
				c-28.787-16.613-46.208-61.816-51.781-134.352c-4.133-53.8-42.494-97.895-92.406-111.187c3.738-5.813,5.915-12.72,5.915-20.129
				C293.347,16.754,276.592,0,255.998,0c-20.592,0-37.346,16.754-37.346,37.348c0,7.409,2.179,14.315,5.915,20.129
				c-49.912,13.291-88.273,57.387-92.408,111.187c-5.573,72.536-22.994,117.738-51.779,134.352
				c-8.337,4.811-13.755,15.027-15.665,29.548c-1.239,9.426-1.621,29.217,5.817,36.649c2,1.999,4.713,3.122,7.539,3.122h113.823
				c5.104,30.781,31.9,54.332,64.107,54.332c32.206,0,59.001-23.551,64.107-54.332h113.821c2.827,0,5.539-1.123,7.539-3.122
				c7.44-7.437,7.056-27.234,5.814-36.663C446.33,325.338,444.513,319.191,441.904,314.239z M255.998,21.333
				c8.831,0,16.015,7.184,16.015,16.015c0,8.83-7.183,16.014-16.015,16.014c-8.829,0-16.013-7.184-16.013-16.014
				C239.986,28.517,247.17,21.333,255.998,21.333z M255.998,405.333c-20.398,0-37.569-14.061-42.341-32.998h84.681
				C293.567,391.272,276.396,405.333,255.998,405.333z M426.234,351.002H85.763c-0.442-3.487-0.675-8.542-0.067-14.235
				c1.021-9.532,3.756-14.356,5.346-15.275c35.748-20.631,56.156-70.087,62.387-151.194c4.118-53.609,49.173-95.603,102.568-95.603
				c53.396,0,98.45,41.995,102.568,95.603c2.998,39.019,9.285,70.691,18.975,95.374h-40.1c-5.889,0-10.667,4.775-10.667,10.667
				s4.778,10.667,10.667,10.667h50.323c4.822,8.249,10.221,15.35,16.197,21.333H297.596c-5.889,0-10.667,4.775-10.667,10.667
				c0,5.891,4.778,10.667,10.667,10.667H425.05c0.512,1.988,0.953,4.338,1.248,7.093
				C426.909,342.459,426.675,347.514,426.234,351.002z" />
				<path d="M362.663,490.667l-213.333-0.004c-5.889,0-10.667,4.775-10.667,10.667c0,5.89,4.775,10.667,10.667,10.667L362.663,512
				c5.891,0,10.667-4.775,10.667-10.667S368.555,490.667,362.663,490.667z" />
				<path d="M259.198,308.339h-6.4c-5.891,0-10.667,4.775-10.667,10.667c0,5.891,4.775,10.667,10.667,10.667h6.4
				c5.889,0,10.667-4.775,10.667-10.667C269.865,313.114,265.088,308.339,259.198,308.339z" />
			</g>
		</g>
	</g>
</svg>
}

templ refreshIconSVG() {
<svg fill="currentColor" class="h-6 w-6" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 321.658 321.658" xml:space="preserve">
	<g>
		<path d="M140.356,264.138c-5.605,0-11.229-0.451-16.711-1.341c-10.905-1.773-21.176,5.633-22.946,16.536
		c-1.771,10.903,5.633,21.177,16.536,22.947c7.595,1.233,15.374,1.859,23.121,1.859c11.046,0,20-8.954,20-20
		S151.402,264.138,140.356,264.138z" />
		<path d="M39.525,183.435c-2.403-10.781-13.093-17.57-23.874-15.167c-10.78,2.404-17.571,13.093-15.167,23.874
		c3.824,17.15,10.711,33.285,20.469,47.958c3.852,5.792,10.201,8.927,16.672,8.927c3.804,0,7.651-1.083,11.057-3.348
		c9.197-6.117,11.695-18.531,5.578-27.729C47.234,207.384,42.276,195.771,39.525,183.435z" />
		<path d="M59.052,42.803C44.594,52.778,32.211,65.172,22.25,79.64c-6.265,9.098-3.967,21.551,5.131,27.815
		c3.464,2.385,7.413,3.529,11.324,3.529c6.358,0,12.611-3.026,16.49-8.66c7.192-10.446,16.133-19.395,26.572-26.598
		c9.092-6.273,11.377-18.728,5.104-27.82C80.6,38.815,68.146,36.53,59.052,42.803z" />
		<path
			d="M320.581,160.63c-1.693-3.051-5.097-4.801-9.337-4.801h-27.673c-0.019-0.561-0.042-1.122-0.068-1.683
		c-0.02-0.435-0.042-0.869-0.066-1.303c-0.04-0.719-0.087-1.438-0.137-2.157c-0.028-0.394-0.052-0.788-0.083-1.181
		c-0.085-1.083-0.18-2.165-0.289-3.244c-0.014-0.14-0.032-0.278-0.046-0.418c-0.103-0.991-0.217-1.98-0.34-2.967
		c-0.032-0.258-0.068-0.515-0.101-0.772c-0.12-0.918-0.248-1.834-0.386-2.748c-0.029-0.195-0.058-0.389-0.089-0.583
		c-0.055-0.354-0.104-0.71-0.162-1.064c-0.017-0.106-0.048-0.207-0.067-0.313c-6.532-39.545-29.302-73.684-61.218-95.301
		c-0.332-0.251-0.654-0.51-1.006-0.743c-14.682-9.743-30.823-16.615-47.977-20.423c-0.133-0.03-0.265-0.041-0.398-0.068
		c-9.92-2.18-20.218-3.34-30.783-3.34c-11.046,0-20,8.954-20,20s8.954,20,20,20c8.002,0,15.795,0.915,23.279,2.645
		c0.902,0.208,1.798,0.432,2.692,0.663c39.385,10.236,69.708,43.183,76.091,83.963c0.159,1.024,0.308,2.051,0.436,3.083
		c0.046,0.367,0.084,0.737,0.127,1.106c0.11,0.968,0.209,1.938,0.293,2.911c0.022,0.25,0.047,0.5,0.067,0.751
		c0.083,1.06,0.141,2.124,0.192,3.187h-28.288c-4.24,0-7.644,1.75-9.337,4.801c-1.689,3.042-1.379,6.841,0.852,10.423l47.482,76.207
		c2.178,3.496,5.455,5.5,8.994,5.5c3.544,0,6.828-2.01,9.011-5.514l47.483-76.193C321.96,167.471,322.271,163.672,320.581,160.63z" />
	</g>
</svg>
}
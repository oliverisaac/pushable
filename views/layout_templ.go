// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/oliverisaac/pushable/types"
	"github.com/oliverisaac/pushable/version"
)

func versionedPath(path string) string {
	return fmt.Sprintf("%s?version=%s", path, version.Tag)
}

func Layout(cfg types.Config, user *types.User, title string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/layout.templ`, Line: 20, Col: 15}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</title><meta name=\"description\" content=\"A command line tool that helps you build and test web app ideas blazingly-fast with a streamlined Go, HTMX, and SQLite stack. Authored by Damien Sedgwick.\"><link href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(versionedPath("/static/css/style.min.css"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/layout.templ`, Line: 23, Col: 56}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" rel=\"stylesheet\"><link rel=\"icon\" href=\"/static/icon-128.png\" type=\"image/png\"><script src=\"/static/htmx-2.0.6.min.js\"></script><link rel=\"manifest\" href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(versionedPath("/static/manifest.json"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/layout.templ`, Line: 27, Col: 67}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><meta name=\"mobile-web-app-capable\" content=\"yes\"><meta name=\"apple-mobile-web-app-capable\" content=\"yes\"><meta name=\"application-name\" content=\"Pushable\"><meta name=\"apple-mobile-web-app-title\" content=\"Pushable\"><!--\n    <meta name=\"theme-color\" content=\"#2c3e50\"/> \n    <meta name=\"msapplication-navbutton-color\" content=\"#2c3e50\"/>\n    --><meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"><link rel=\"icon\" type=\"image/png\" href=\"/static/icon-512.png\"><link rel=\"apple-touch-icon\" href=\"/static/icon-512.png\"></head><body id=\"body\" class=\"bg-neutral-900 text-neutral-100 flex flex-col min-h-screen\"><header class=\"bg-neutral-800\"><nav class=\"container flex items-center justify-between p-4 mx-auto\"><a href=\"/\" title=\"Napp Home\" class=\"flex items-center space-x-2\"><img src=\"/static/icon-512.png\" class=\"h-10 w-10\" alt=\"Icon\"> <span class=\"text-4xl font-bold\">Pushable</span></a><ul class=\"flex items-center space-x-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if user != nil {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li><button hx-post=\"/auth/sign-out\" hx-target=\"body\" class=\"px-4 py-2 text-white rounded-md bg-gray-600 hover:bg-gray-700\">Sign Out</button></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li><button hx-get=\"/auth/sign-in\" hx-target=\"body\" class=\"px-4 py-2 text-white rounded-md bg-primary-600 hover:bg-primary-700\">Sign In</button></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></nav></header><main class=\"container p-4 mx-auto flex-grow\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</main><footer class=\"p-4\"><div class=\"flex justify-center items-center space-x-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if user != nil {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button id=\"push-subscribe-button\" class=\"flex items-center px-4 py-2 text-white rounded-md bg-blue-600 hover:bg-blue-700\"><span class=\"ml-2\">Notify Me</span></button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(user.PushSubscriptions) > 0 {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button hx-confirm=\"Unsubscribe all devices from push notifications?\" hx-post=\"/push/unsubscribe\" hx-swap=\"delete\" id=\"push-unsubscribe-button\" class=\"px-4 py-2 text-white rounded-md bg-red-800 hover:bg-red-800\">Do Not Notify Me</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><p class=\"text-center text-neutral-500 text-xs mt-2\">Version: ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(version.Tag)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/layout.templ`, Line: 82, Col: 77}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></footer><script type=\"text/javascript\">\n\t\tdocument.addEventListener(\"DOMContentLoaded\", (event) => {\n\t\t\tdocument.body.addEventListener('htmx:beforeSwap', function (evt) {\n\t\t\t\tif (evt.detail.xhr.status === 422 || evt.detail.xhr.status === 500) {\n\t\t\t\t\tconsole.log(\"setting status to paint\");\n\t\t\t\t\t// allow 422 responses to swap as we are using this as a signal that\n\t\t\t\t\t// a form was submitted with bad data and want to rerender with the\n\t\t\t\t\t// errors\n\t\t\t\t\t//\n\t\t\t\t\t// set isError to false to avoid error logging in console\n\t\t\t\t\tevt.detail.shouldSwap = true;\n\t\t\t\t\tevt.detail.isError = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t</script><script>\n\t\tfunction setupNotifications(vapidPublicKey, serviceworkerPath) {\n\t\t\tlet wakeLock = null;\n\n\t\t\t// Register Service Worker\n\t\t\tif ('serviceWorker' in navigator) {\n\t\t\t\tnavigator.serviceWorker.register(serviceworkerPath, { scope: '/' })\n\t\t\t\t\t.then(function (reg) {\n\t\t\t\t\t\tconsole.log('Service Worker registered successfully.');\n\t\t\t\t\t\tif (document.getElementById('push-subscribe-button')) {\n\t\t\t\t\t\t\tdocument.getElementById('push-subscribe-button').addEventListener('click', function () {\n\t\t\t\t\t\t\t\tconsole.log(\"subscribe button pusshed\")\n\t\t\t\t\t\t\t\tif ('serviceWorker' in navigator && 'PushManager' in window) {\n\t\t\t\t\t\t\t\t\tNotification.requestPermission().then(function (permission) {\n\t\t\t\t\t\t\t\t\t\tif (permission === 'granted') {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"going to subscribe\")\n\t\t\t\t\t\t\t\t\t\t\treg.pushManager.subscribe({\n\t\t\t\t\t\t\t\t\t\t\t\tuserVisibleOnly: true,\n\t\t\t\t\t\t\t\t\t\t\t\tapplicationServerKey: urlBase64ToUint8Array(vapidPublicKey)\n\t\t\t\t\t\t\t\t\t\t\t}).then(function (subscription) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Posting to /push/subscribe\")\n\t\t\t\t\t\t\t\t\t\t\t\tfetch('/push/subscribe', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify(subscription)\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}).then(function (resp) {\n\t\t\t\t\t\t\t\t\t\t\t\talert(\"Subscribed!\")\n\t\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById('push-subscribe-button').remove()\n\t\t\t\t\t\t\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.error('Failed to subscribe to push notifications:', err);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Permission not granted for notifications\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Missing deps\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.error('Service Worker registration failed:', err));\n\t\t\t}\n\t\t}\n\n\t\tfunction urlBase64ToUint8Array(base64String) {\n\t\t\tconst padding = '='.repeat((4 - base64String.length % 4) % 4);\n\t\t\tconst base64 = (base64String + padding)\n\t\t\t\t.replace(/\\-/g, '+')\n\t\t\t\t.replace(/_/g, '/');\n\n\t\t\tconst rawData = window.atob(base64);\n\t\t\tconst outputArray = new Uint8Array(rawData.length);\n\n\t\t\tfor (let i = 0; i < rawData.length; ++i) {\n\t\t\t\toutputArray[i] = rawData.charCodeAt(i);\n\t\t\t}\n\t\t\treturn outputArray;\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.JSFuncCall("setupNotifications", cfg.VapidPublicKey, versionedPath("/serviceWorker.js")).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
